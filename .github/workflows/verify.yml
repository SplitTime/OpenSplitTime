name: Verify
on: [ push ]

jobs:
  linters:
    name: Code integrity
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: JS package cache
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install packages
        run: |
          yarn install --pure-lockfile

      - name: Run security checks
        run: |
          bin/bundle-audit check --update

  tests:
    name: Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports: [ "5432:5432" ]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:alpine
        ports: [ "6379:6379" ]
        options: --entrypoint redis-server

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: JS package cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install packages
        run: |
          yarn install --pure-lockfile

      - name: Compile assets
        run: |
          yarn build
          yarn build:css

      - name: Setup test database
        env:
          RAILS_ENV: test
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: |
          bin/rails db:setup

      - name: Run tests
        env:
          RAILS_ENV: test
          CI: true
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: bin/rspec

      - name: Save capybara screenshots as artifact
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: capybara-failure-screenshots
          path: tmp/capybara/*.png
